model Config {
  disableHttp2?: boolean(description='disable HTTP/2', example='false'),
}

type @disableHttp2 = boolean
init(config: Config) {
  @disableHttp2 = config.disableHttp2;
}

api hello(): void {
  __request.method = 'GET';
  __request.pathname = '/';
  __request.headers = {
    host = 'www.test.com',
  };
} returns {
  return;
}

api helloRuntime(): void {
  __request.method = 'GET';
  __request.pathname = '/';
  __request.headers = {
    host = 'www.test.com',
  };
} returns {
  return;
} runtime {

}

model M = {};
api helloVirtualCall(m: M): void {
  __request.method = 'GET';
  __request.pathname = '/';
  __request.headers = {
    key = '',
  };
} returns {
  return;
}

model vno = {}

async function vnoPayCallBackNotifyEx(): vno {
  return null;
}


static function defaultAny(inputValue: any, defaultValue: any): any {
  return inputValue;
}

function execute(param: boolean): any {
  var test = !@disableHttp2;
  if (@disableHttp2) {
    return true;
  }
  return defaultAny(@disableHttp2, false);
}